{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ancip\\\\Desktop\\\\js4\\\\jsschool-2023\\\\client\\\\src\\\\scenes\\\\Create\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { memo, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport styles from './Create.module.css';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [currentRobot, setCurrentRobot] = useState(0);\n  const [name, setName] = useState('');\n  const [hasErr, setHasErr] = useState(false);\n  const params = useParams();\n  console.log(params);\n  const robots = ['/robot-1.svg', '/robot-2.svg', '/robot-3.svg', '/robot-4.svg', '/robot-5.svg', '/robot-6.svg', '/robot-7.svg', '/robot-8.svg', '/robot-9.svg', '/robot-10.svg'];\n  const onSubmit = async () => {\n    console.log(name, currentRobot);\n    try {\n      await axios.post(\"/api/robot/create\", {\n        name,\n        type: currentRobot\n      });\n    } catch {\n      setHasErr(true);\n      //console.log()\n    }\n  };\n\n  const onInputChange = value => {\n    setName(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.robotContainer,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.robot,\n        src: robots[currentRobot],\n        alt: \"robot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: robots.map((url, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          label: index + 1,\n          onClick: () => setCurrentRobot(index)\n        }, url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      hasErr: hasErr,\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Submit\",\n      onClick: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Create, \"jNGyF8cOz8UJspZMkLSIvIRh7HQ=\", false, function () {\n  return [useParams];\n});\n_c = Create;\nexport default _c2 = /*#__PURE__*/memo(Create);\n\n//<button type=\"submit\">Submit</button>\nvar _c, _c2;\n$RefreshReg$(_c, \"Create\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","axios","Button","Input","styles","useParams","jsxDEV","_jsxDEV","Create","_s","currentRobot","setCurrentRobot","name","setName","hasErr","setHasErr","params","console","log","robots","onSubmit","post","type","onInputChange","value","className","form","children","robotContainer","robot","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","map","url","index","label","onClick","onChange","_c","_c2","$RefreshReg$"],"sources":["C:/Users/ancip/Desktop/js4/jsschool-2023/client/src/scenes/Create/index.jsx"],"sourcesContent":["import { memo, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\"\r\nimport styles from './Create.module.css';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [currentRobot, setCurrentRobot] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [hasErr, setHasErr] = useState(false)\r\n    const params = useParams()\r\n    console.log(params)\r\n    const robots = [\r\n        '/robot-1.svg',\r\n        '/robot-2.svg',\r\n        '/robot-3.svg',\r\n        '/robot-4.svg',\r\n        '/robot-5.svg',\r\n        '/robot-6.svg',\r\n        '/robot-7.svg',\r\n        '/robot-8.svg',\r\n        '/robot-9.svg',\r\n        '/robot-10.svg'\r\n    ];\r\n\r\n    const onSubmit = async () => {\r\n        console.log(name, currentRobot)\r\n        try {\r\n            await axios.post(\"/api/robot/create\", {name, type:currentRobot})\r\n        } catch {\r\n            setHasErr(true)\r\n            //console.log()\r\n        }\r\n    }\r\n\r\n    const onInputChange = (value) => {\r\n        setName(value)\r\n    }\r\n    \r\n    return (\r\n        <form className={styles.form}>\r\n            <div className={styles.robotContainer}>\r\n                <img className={styles.robot} src={robots[currentRobot]} alt=\"robot\" />\r\n            </div>\r\n            <div className={styles.buttonContainer}>\r\n                {\r\n                    robots.map((url, index) => {\r\n                        return <Button key={url} label={index + 1} onClick={() => setCurrentRobot(index)} />\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n            <Input hasErr={hasErr} onChange={onInputChange}></Input>\r\n            <Button label=\"Submit\" onClick={onSubmit}></Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default memo(Create);\r\n\r\n//<button type=\"submit\">Submit</button>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}