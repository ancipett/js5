{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ancip\\\\Desktop\\\\js4\\\\jsschool-2023\\\\client\\\\src\\\\scenes\\\\Create\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { memo, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { error } from 'react';\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport styles from './Create.module.css';\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [currentRobot, setCurrentRobot] = useState(0);\n  const [name, setName] = useState('');\n  const [hasErr, setHasErr] = useState(false);\n  const params = useParams();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const robots = ['/robot-1.svg', '/robot-2.svg', '/robot-3.svg', '/robot-4.svg', '/robot-5.svg', '/robot-6.svg', '/robot-7.svg', '/robot-8.svg', '/robot-9.svg', '/robot-10.svg'];\n  useEffect(() => {\n    if (id) {\n      const getRobot = async () => {\n        try {\n          const curRobot = await axios.get(\"/api/robot/\" + id, {\n            name,\n            type: currentRobot\n          });\n          setCurrentRobot(curRobot.data.type);\n          setName(curRobot.data.name);\n        } catch {\n          setHasErr(true);\n        }\n      };\n      getRobot();\n    }\n  }, []);\n  const onSubmit = async () => {\n    if (id) {\n      try {\n        await axios.put(`/api/robot/update/${id}`, {\n          name: name,\n          type: parseInt(currentRobot)\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        navigate(\"/\");\n      } catch {\n        console.error(error.response.data);\n      }\n    } else {\n      console.log(name, currentRobot);\n      try {\n        await axios.post(\"/api/robot/create\", {\n          name,\n          type: currentRobot\n        });\n        navigate(\"/\");\n      } catch {\n        setHasErr(true);\n      }\n    }\n  };\n  console.log('name1', name);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.robotContainer,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.robot,\n        src: robots[currentRobot],\n        alt: \"robot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: robots.map((url, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          label: index + 1,\n          onClick: () => setCurrentRobot(index)\n        }, url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      hasErr: hasErr,\n      onChange: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Submit\",\n      onClick: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Create, \"vMiiamGklDfDw5KBqQSygDFwgP4=\", false, function () {\n  return [useParams, useNavigate, useParams];\n});\n_c = Create;\nexport default _c2 = /*#__PURE__*/memo(Create);\nvar _c, _c2;\n$RefreshReg$(_c, \"Create\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useEffect","useState","axios","error","Button","Input","styles","useParams","useNavigate","jsxDEV","_jsxDEV","Create","_s","currentRobot","setCurrentRobot","name","setName","hasErr","setHasErr","params","navigate","id","robots","getRobot","curRobot","get","type","data","onSubmit","put","parseInt","headers","console","response","log","post","className","form","children","robotContainer","robot","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","map","url","index","label","onClick","onChange","_c","_c2","$RefreshReg$"],"sources":["C:/Users/ancip/Desktop/js4/jsschool-2023/client/src/scenes/Create/index.jsx"],"sourcesContent":["import { memo, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { error } from 'react'\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\"\r\nimport styles from './Create.module.css';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const [currentRobot, setCurrentRobot] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [hasErr, setHasErr] = useState(false)\r\n\r\n    const params = useParams()\r\n    const navigate = useNavigate();\r\n    const {id} = useParams();\r\n\r\n    const robots = [\r\n        '/robot-1.svg',\r\n        '/robot-2.svg',\r\n        '/robot-3.svg',\r\n        '/robot-4.svg',\r\n        '/robot-5.svg',\r\n        '/robot-6.svg',\r\n        '/robot-7.svg',\r\n        '/robot-8.svg',\r\n        '/robot-9.svg',\r\n        '/robot-10.svg'\r\n    ];\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            const getRobot = async () => {try {\r\n                const curRobot = await axios.get(\"/api/robot/\"+id, {name, type:currentRobot})\r\n                setCurrentRobot(curRobot.data.type)\r\n                setName(curRobot.data.name)\r\n            } catch {\r\n                setHasErr(true)\r\n            }}      \r\n            getRobot();\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onSubmit = async () => {\r\n        if(id) {\r\n        try {\r\n            await axios.put(`/api/robot/update/${id}`, {name:name, type:parseInt(currentRobot)}, {headers: {'Content-Type': 'application/json'}})  \r\n            navigate(\"/\")\r\n        } catch {\r\n            console.error(error.response.data);\r\n        }\r\n        } else {\r\n        console.log(name, currentRobot)\r\n        try {\r\n            await axios.post(\"/api/robot/create\", {name, type:currentRobot})    \r\n            navigate(\"/\")\r\n        } catch {\r\n            setHasErr(true)\r\n        }\r\n     }\r\n    }\r\n\r\n    console.log('name1', name)\r\n    return (\r\n        <form className={styles.form}>\r\n            <div className={styles.robotContainer}>\r\n                <img className={styles.robot} src={robots[currentRobot]} alt=\"robot\" />\r\n            </div>\r\n            <div className={styles.buttonContainer}>\r\n                {\r\n                    robots.map((url, index) => {\r\n                        return <Button key={url} label={index + 1} onClick={() => setCurrentRobot(index)} />\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n            <Input name={name} hasErr={hasErr} onChange={setName}></Input>\r\n            <Button label=\"Submit\" onClick={onSubmit}></Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default memo(Create);\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}